basePath: /api/v1
definitions:
  model.Order:
    properties:
      amount:
        type: integer
      create_time:
        type: string
      id:
        type: integer
      pid:
        type: integer
      status:
        type: integer
      uid:
        type: integer
      update_time:
        type: string
    type: object
  model.Product:
    properties:
      create_time:
        type: string
      desc:
        description: 产品描述
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        description: 价格
        type: integer
      status:
        description: 产品状态 0-下架 1-上架
        type: integer
      stock:
        description: 库存
        type: integer
      update_time:
        type: string
    type: object
  model.Role:
    properties:
      id:
        type: integer
      role_name:
        type: string
    type: object
  request.AddPolicyReq:
    properties:
      v0:
        type: string
      v1:
        type: string
      v2:
        type: string
    required:
    - v0
    - v1
    type: object
  request.AddRoleReq:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  request.AdminAssignRoleReq:
    properties:
      admin_id:
        type: integer
      role_id:
        type: integer
    required:
    - admin_id
    - role_id
    type: object
  request.AdminLoginReq:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.AdminRegisterReq:
    properties:
      email:
        type: string
      mobile:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - mobile
    - password
    - username
    type: object
  request.CreateOrderReq:
    properties:
      amount:
        type: integer
      pid:
        type: integer
      uid:
        type: integer
    required:
    - amount
    - pid
    - uid
    type: object
  request.CreateProductReq:
    properties:
      desc:
        type: string
      name:
        type: string
      price:
        type: integer
      status:
        description: 产品状态 0-下架 1-上架
        type: integer
      stock:
        type: integer
    required:
    - desc
    - name
    - price
    - status
    - stock
    type: object
  request.DeleteOrderReq:
    properties:
      id:
        type: integer
    type: object
  request.DeleteProductReq:
    properties:
      id:
        type: integer
    type: object
  request.DeleteRoleReq:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  request.GetAdminListReq:
    properties:
      page_num:
        type: integer
      page_size:
        type: integer
    type: object
  request.GetOrderByIdReq:
    properties:
      id:
        type: integer
    type: object
  request.GetOrderByPidReq:
    properties:
      pid:
        type: integer
    type: object
  request.GetOrderByUidReq:
    properties:
      uid:
        type: integer
    type: object
  request.GetOrderListReq:
    properties:
      page_num:
        type: integer
      page_size:
        type: integer
    type: object
  request.GetPolicyByRoleReq:
    properties:
      id:
        type: integer
    type: object
  request.GetProductByIdReq:
    properties:
      id:
        type: integer
    type: object
  request.GetProductByNameReq:
    properties:
      name:
        type: string
    type: object
  request.GetProductListReq:
    properties:
      page_num:
        type: integer
      page_size:
        type: integer
    type: object
  request.RemovePolicyReq:
    properties:
      v0:
        type: string
      v1:
        type: string
      v2:
        type: string
    required:
    - v0
    - v1
    type: object
  request.UpdateOrderReq:
    properties:
      amount:
        type: integer
      id:
        type: integer
      pid:
        type: integer
      uid:
        type: integer
    required:
    - amount
    - id
    - pid
    - uid
    type: object
  request.UpdatePolicyReq:
    properties:
      new_v0:
        type: string
      new_v1:
        type: string
      new_v2:
        type: string
      old_v0:
        type: string
      old_v1:
        type: string
      old_v2:
        type: string
    required:
    - new_v0
    - new_v1
    - old_v0
    - old_v1
    type: object
  request.UpdateProductReq:
    properties:
      desc:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      status:
        description: 产品状态 0-下架 1-上架
        type: integer
      stock:
        type: integer
    required:
    - desc
    - id
    - name
    - price
    - status
    - stock
    type: object
  request.UpdateRoleReq:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  request.UserLoginReq:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.UserRegisterReq:
    properties:
      email:
        type: string
      mobile:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - mobile
    - password
    - username
    type: object
  response.AddRoleResp:
    properties:
      id:
        type: integer
    type: object
  response.AdminInfo:
    properties:
      email:
        type: string
      id:
        type: integer
      mobile:
        type: string
      username:
        type: string
    type: object
  response.AdminLoginResp:
    properties:
      expire:
        description: 过期时间
        type: integer
      token:
        type: string
    type: object
  response.AdminRegisterResp:
    properties:
      email:
        type: string
      id:
        type: integer
      mobile:
        type: string
      username:
        type: string
    type: object
  response.CreateOrderResp:
    properties:
      id:
        type: integer
    type: object
  response.CreateProductResp:
    properties:
      id:
        type: integer
    type: object
  response.DeleteOrderResp:
    properties:
      id:
        type: integer
    type: object
  response.DeleteProductResp:
    properties:
      id:
        type: integer
    type: object
  response.DeleteRoleResp:
    properties:
      id:
        type: integer
    type: object
  response.GetOrderByIdResp:
    properties:
      amount:
        type: integer
      create_time:
        type: string
      id:
        type: integer
      pid:
        type: integer
      status:
        type: integer
      uid:
        type: integer
      update_time:
        type: string
    type: object
  response.GetOrderByPidResp:
    properties:
      list:
        items:
          $ref: '#/definitions/model.Order'
        type: array
      total:
        type: integer
    type: object
  response.GetOrderByUidResp:
    properties:
      list:
        items:
          $ref: '#/definitions/model.Order'
        type: array
      total:
        type: integer
    type: object
  response.GetOrderListResp:
    properties:
      list:
        items:
          $ref: '#/definitions/model.Order'
        type: array
      total:
        type: integer
    type: object
  response.GetProductByIdResp:
    properties:
      create_time:
        type: string
      desc:
        description: 产品描述
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        description: 价格
        type: integer
      status:
        description: 产品状态 0-下架 1-上架
        type: integer
      stock:
        description: 库存
        type: integer
      update_time:
        type: string
    type: object
  response.GetProductByNameResp:
    properties:
      list:
        description: 产品列表
        items:
          $ref: '#/definitions/model.Product'
        type: array
      total:
        description: 总数
        type: integer
    type: object
  response.GetProductListResp:
    properties:
      list:
        items:
          $ref: '#/definitions/model.Product'
        type: array
      total:
        type: integer
    type: object
  response.GetRoleListResp:
    properties:
      list:
        items:
          $ref: '#/definitions/model.Role'
        type: array
      total:
        type: integer
    type: object
  response.UpdateOrderResp:
    properties:
      id:
        type: integer
    type: object
  response.UpdateProductResp:
    properties:
      id:
        type: integer
    type: object
  response.UpdateRoleResp:
    properties:
      id:
        type: integer
    type: object
  response.UserInfo:
    properties:
      email:
        type: string
      id:
        type: integer
      mobile:
        type: string
      username:
        type: string
    type: object
  response.UserLoginResp:
    properties:
      expire:
        description: 过期时间
        type: integer
      token:
        type: string
    type: object
  response.UserRegisterResp:
    properties:
      email:
        type: string
      id:
        type: integer
      mobile:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: hongwei.wang408@gmail.com
    name: rice408
    url: http://47.108.226.33/
  description: 商城系统接口文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: 商城系统
  version: "1.0"
paths:
  /admin/assign-role:
    post:
      consumes:
      - application/json
      description: 给管理员分配角色
      parameters:
      - description: 分配角色
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.AdminAssignRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 给管理员分配角色
      tags:
      - 管理员
  /admin/info:
    get:
      consumes:
      - application/json
      description: 管理员信息
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AdminInfo'
      summary: 管理员信息
      tags:
      - 管理员
  /admin/list:
    post:
      consumes:
      - application/json
      description: 获取管理员列表
      parameters:
      - description: 获取管理员列表
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.GetAdminListReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 获取管理员列表
      tags:
      - 管理员
  /admin/login:
    post:
      consumes:
      - application/json
      description: 管理员登录
      parameters:
      - description: 登录
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.AdminLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AdminLoginResp'
      summary: 管理员登录
      tags:
      - 管理员
  /admin/order/getByUid:
    post:
      consumes:
      - application/json
      description: 通过uid获取订单
      parameters:
      - description: 通过uid获取订单
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.GetOrderByUidReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetOrderByUidResp'
      summary: 通过用户获取订单
      tags:
      - 订单
  /admin/policy/add:
    post:
      consumes:
      - application/json
      description: 添加策略
      parameters:
      - description: 添加策略
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.AddPolicyReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"添加成功"}'
          schema:
            type: string
      summary: 添加策略
      tags:
      - 策略管理
  /admin/policy/getByRole:
    post:
      consumes:
      - application/json
      description: 通过角色获取策略
      parameters:
      - description: 通过角色获取策略
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.GetPolicyByRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      summary: 通过角色获取策略
      tags:
      - 策略管理
  /admin/policy/list:
    post:
      consumes:
      - application/json
      description: 获取策略
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      summary: 获取策略
      tags:
      - 策略管理
  /admin/policy/remove:
    post:
      consumes:
      - application/json
      description: 删除策略
      parameters:
      - description: 删除策略
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.RemovePolicyReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      summary: 删除策略
      tags:
      - 策略管理
  /admin/policy/update:
    post:
      consumes:
      - application/json
      description: 修改策略
      parameters:
      - description: 修改策略
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePolicyReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      summary: 修改策略
      tags:
      - 策略管理
  /admin/register:
    post:
      consumes:
      - application/json
      description: 管理员注册
      parameters:
      - description: 注册
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.AdminRegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AdminRegisterResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 管理员注册
      tags:
      - 管理员
  /order/create:
    post:
      consumes:
      - application/json
      description: 创建订单
      parameters:
      - description: 创建订单
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateOrderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreateOrderResp'
      summary: 创建订单
      tags:
      - 订单
  /product/add:
    post:
      consumes:
      - application/json
      description: 添加产品
      parameters:
      - description: 添加产品
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: 添加成功
          schema:
            $ref: '#/definitions/response.CreateProductResp'
      summary: 添加产品
      tags:
      - 产品
  /product/delete:
    post:
      consumes:
      - application/json
      description: 删除产品
      parameters:
      - description: 删除产品
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.DeleteProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/response.DeleteProductResp'
      summary: 删除产品
      tags:
      - 产品
  /product/get:
    post:
      consumes:
      - application/json
      description: 根据id获取产品
      parameters:
      - description: 根据id获取产品
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.GetProductByIdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/response.GetProductByIdResp'
      summary: 根据id获取产品
      tags:
      - 产品
  /product/getByName:
    post:
      consumes:
      - application/json
      description: 根据名称获取产品列表
      parameters:
      - description: 根据名称获取产品列表
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.GetProductByNameReq'
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/response.GetProductByNameResp'
      summary: 根据名称获取产品列表
      tags:
      - 产品
  /product/list:
    post:
      consumes:
      - application/json
      description: 获取产品列表
      parameters:
      - description: 获取产品列表
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.GetProductListReq'
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/response.GetProductListResp'
      summary: 获取产品列表
      tags:
      - 产品
  /product/update:
    post:
      consumes:
      - application/json
      description: 更新产品
      parameters:
      - description: 更新产品
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/response.UpdateProductResp'
      summary: 更新产品
      tags:
      - 产品
  /role/add:
    post:
      consumes:
      - application/json
      description: 添加角色
      parameters:
      - description: 添加角色
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.AddRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: 添加成功
          schema:
            $ref: '#/definitions/response.AddRoleResp'
      summary: 添加角色
      tags:
      - 角色
  /role/delete:
    post:
      consumes:
      - application/json
      description: 删除角色
      parameters:
      - description: 角色id
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.DeleteRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/response.DeleteRoleResp'
      summary: 删除角色
      tags:
      - 角色
  /role/list:
    get:
      consumes:
      - application/json
      description: 查询角色列表
      parameters:
      - in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            $ref: '#/definitions/response.GetRoleListResp'
      summary: 查询角色列表
      tags:
      - 角色
  /role/listByAdminId:
    get:
      consumes:
      - application/json
      description: 通过管理员id获取角色列表
      parameters:
      - in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 通过管理员id获取角色列表
      tags:
      - 角色
  /role/update:
    post:
      consumes:
      - application/json
      description: 更新角色
      parameters:
      - description: 更新角色
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/response.UpdateRoleResp'
      summary: 更新角色
      tags:
      - 角色
  /user/info:
    get:
      consumes:
      - application/json
      description: 获取用户信息
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户信息成功
          schema:
            $ref: '#/definitions/response.UserInfo'
      tags:
      - 用户
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: 登录
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/response.UserLoginResp'
      summary: 用户登录
      tags:
      - 用户
  /user/order/delete:
    post:
      consumes:
      - application/json
      description: 删除订单
      parameters:
      - description: 删除订单
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.DeleteOrderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DeleteOrderResp'
      summary: 删除订单
      tags:
      - 订单
  /user/order/get:
    post:
      consumes:
      - application/json
      description: 根据id获取订单
      parameters:
      - description: 根据id获取订单
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.GetOrderByIdReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetOrderByIdResp'
      summary: 根据id获取订单
      tags:
      - 订单
  /user/order/getByPid:
    post:
      consumes:
      - application/json
      description: 通过pid获取订单
      parameters:
      - description: 通过pid获取订单
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.GetOrderByPidReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetOrderByPidResp'
      summary: 通过商品获取订单
      tags:
      - 订单
  /user/order/getByUid:
    post:
      consumes:
      - application/json
      description: 通过uid获取订单
      parameters:
      - description: 通过uid获取订单
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.GetOrderByUidReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetOrderByUidResp'
      summary: 通过用户获取订单
      tags:
      - 订单
  /user/order/list:
    post:
      consumes:
      - application/json
      description: 分页获取订单
      parameters:
      - description: 分页获取订单
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.GetOrderListReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetOrderListResp'
      summary: 获取订单列表
      tags:
      - 订单
  /user/order/update:
    post:
      consumes:
      - application/json
      description: 修改订单
      parameters:
      - description: 修改订单
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateOrderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateOrderResp'
      summary: 修改订单
      tags:
      - 订单
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: 注册
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserRegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            $ref: '#/definitions/response.UserRegisterResp'
        "500":
          description: 参数错误
          schema:
            type: string
      summary: 用户注册
      tags:
      - 用户
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
